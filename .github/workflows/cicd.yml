name: CI/CD Workflow for Automated Testing & Azure Login with OIDC

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with Ruff
        run: |
          pip install ruff
          ruff --format=github --target-version=py310 .
        continue-on-error: true

      - name: Test with pytest
        run: |
          coverage run -m pytest -v -s

      - name: Generate Coverage Report
        run: |
          coverage report -m
          COVERAGE_PERCENTAGE=$(coverage report -m | grep "TOTAL" | awk '{print $4}')
          echo "::set-output name=COVERAGE_PERCENTAGE::$COVERAGE_PERCENTAGE"

  oidc-login:
    runs-on: windows-latest
    needs: build
    steps:
      - name: OIDC Login to Azure Public Cloud
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 
          enable-AzPSSession: true

      - name: 'Get resource group with PowerShell action'
        uses: azure/powershell@v1
        with:
          inlineScript: |
            Get-AzResourceGroup
          azPSVersion: "latest"

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: oidc-login
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v2
        with:
          node-version: '14'
  
      - name: Setup Dependencies
        run: npm install @actions/core

      - name: Azure Login
        uses: azure/login@14a755a4e2fd6dff25794233def4f2cf3f866955
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build image on ACR
        uses: azure/CLI@61bb69d64d613b52663984bf12d6bac8fd7b3cc8
        with:
          azcliversion: 2.29.1
          inlineScript: |
            az configure --defaults acr=${{ secrets.AZURE_CONTAINER_REGISTRY }}
            az acr build -t ${{ secrets.REGISTRY_URL }}/${{ env.PROJECT_NAME }}:${{ github.sha }} .

      - name: Gets K8s context
        uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          cluster-name: ${{ secrets.CLUSTER_NAME }}

      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
        
      - name: Configure deployment
        uses: azure/k8s-bake@v1
        with:
          renderEngine: 'helm'
          helmChart: ${{ env.CHART_PATH }}
          overrideFiles: ${{ env.CHART_OVERRIDE_PATH }}
          overrides: |     
            replicas:2
          helm-version: 'latest' 
          
      - name: Deploys application
        uses: Azure/k8s-deploy@v1
        with:
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
          images: |
            ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.PROJECT_NAME }}:${{ github.sha }}
          imagepullsecrets: |
            ${{ env.PROJECT_NAME }}
